{
	"info": {
		"_postman_id": "48f208ea-0071-4d73-8b62-16c6a7515d91",
		"name": "Login Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38630752",
		"_collection_link": "https://warped-shuttle-586149.postman.co/workspace/TCSS460-Group-1~25d99b7c-ba1d-48c6-8df0-57753de15649/collection/38630752-48f208ea-0071-4d73-8b62-16c6a7515d91?action=share&source=collection_link&creator=38630752"
	},
	"item": [
		{
			"name": "Register",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response includes specified elements\", () => {\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response).to.have.ownProperty(\"accessToken\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response is Successful\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\":\"{{$randomFirstName}}\",\r\n    \"lastname\":\"{{$randomLastName}}\",\r\n    \"email\":\"{{email}}\",\r\n    \"password\":\"Password1!\",\r\n    \"username\":\"{{$randomUserName}}\",\r\n    \"role\":\"1\",\r\n    \"phone\":\"{{$timestamp}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4000/register",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response includes specified elements\", () => {\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response).to.have.ownProperty(\"accessToken\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response is Successful\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\" : \"{{email}}\",\r\n    \"password\" : \"Password1!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4000/login",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login 400 incorrectPW",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response includes specified elements\", () => {\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response).to.have.ownProperty(\"message\");\r",
							"    pm.expect(response.message).to.equal(\"Credentials did not match\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response does NOT include specified elements\", () => {\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response).to.not.have.ownProperty(\"accessToken\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response is Bad Request\", () => {\r",
							"    pm.response.to.have.status(400);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\" : \"{{email}}\",\r\n    \"password\" : \"wrongPassword\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4000/login",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login 400 noPW",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response includes specified elements\", () => {\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response).to.have.ownProperty(\"message\");\r",
							"    pm.expect(response.message).to.equal(\"Missing required information\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response does NOT include specified elements\", () => {\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response).to.not.have.ownProperty(\"accessToken\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response is Bad Request\", () => {\r",
							"    pm.response.to.have.status(400);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\" : \"{{email}}\",\r\n    \"password\" : \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4000/login",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login 400 noEmail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response includes specified elements\", () => {\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response).to.have.ownProperty(\"message\");\r",
							"    pm.expect(response.message).to.equal(\"Missing required information\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response does NOT include specified elements\", () => {\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response).to.not.have.ownProperty(\"accessToken\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response is Bad Request\", () => {\r",
							"    pm.response.to.have.status(400);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\" : \"\",\r\n    \"password\" : \"Password1!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4000/login",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response includes specified elements\", () => {\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response).to.have.ownProperty(\"message\");\r",
							"    pm.expect(response.message).to.equal(\"User not found\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response does NOT include specified elements\", () => {\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response).to.not.have.ownProperty(\"accessToken\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response is Bad Request\", () => {\r",
							"    pm.response.to.have.status(404);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\" : \"wrong@email.com\",\r\n    \"password\" : \"Password1!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4000/login",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"login"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "email",
			"value": ""
		}
	]
}